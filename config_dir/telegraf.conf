# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 2000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""

  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "docker_174_token"
  organization = "MMLAB"
  bucket = "docker_174"


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.net]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = []
  source_tag = false
  container_name_include = []
  container_name_exclude = []
  timeout = "10s"
  perdevice = true
  total = true
  docker_label_include = []
  docker_label_exclude = []
  tag_env = []

# [[inputs.smart]]
#   interval = "24h"
#   ## Optionally specify the path to the smartctl executable
#   # path_smartctl = "/usr/bin/smartctl"

#   ## Skip checking disks in this power mode. Defaults to
#   ## "standby" to not wake up disks that have stopped rotating.
#   ## See --nocheck in thesartctl.
#   ## smartctl version 5.41 and 5.42 have faulty detection of
#   ## power mode and might require changing this value to
#   ## "never" depending on your disks.
#   nocheck = "never"

#   ## Gather all returned S.M.A.R.T. attribute metrics and the detailed
#   ## information from each drive into the 'smart_attribute' measurement.
#   attributes = false

  ## Optionally specify devices and device type, if unset
  ## a scan (smartctl --scan and smartctl --scan -d nvme) for S.M.A.R.T. devices will be done
  ## and all found will be included except for the excluded in excludes.
  # devices = [ "/dev/ada0 -d atacam", "/dev/nvme0"]

  ## Timeout for the cli command to complete.
  # timeout = "30s"

# [[inputs.nvidia_smi]]
  ## Optional: path to nvidia-smi binary, defaults to $PATH via exec.LookPath
  # bin_path = "/usr/bin/nvidia-smi"

  ## Optional: timeout for GPU polling
  # timeout = "8s"

# [[inputs.snmp]]
#   # Polling interval
#   interval = "20s"

#   agents = ["udp://140.118.107.180:161"]

#   # Timeout for each request.
#   timeout = "8s"

#   ## SNMP version; can be 1, 2, or 3.
#   version = 3

#   # Number of retries to attempt.
#   retries = 2

#   # SNMPv3 authentication and encryption options.
#   sec_name = "jjchen"
#   auth_protocol = "MD5"
#   auth_password = "Mm1@bjjc!23"
#   sec_level = "authNoPriv"
#   context_name = ""
  
#   #Syno disk
#   [[inputs.snmp.table]]
#     oid = "SYNOLOGY-DISK-MIB::diskTable"
#   [[inputs.snmp.table.field]]
#     is_tag = true
#     oid = "SYNOLOGY-DISK-MIB::diskID" 

# 	# Space statistics
# 	[[inputs.snmp.table]]
# 		oid = "SYNOLOGY-SPACEIO-MIB::spaceIOTable"

# 		[[inputs.snmp.table.field]]
# 			is_tag = true
# 			oid = "SYNOLOGY-SPACEIO-MIB::spaceIOIndex"
		
# 		[[inputs.snmp.table.field]]
# 			is_tag = true
# 			oid = "SYNOLOGY-SPACEIO-MIB::spaceIODevice"

